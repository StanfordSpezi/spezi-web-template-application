#
# This source file is part of the Stanford Biodesign Digital Health Spezi Web Template Application open-source project
#
# SPDX-FileCopyrightText: 2025 Stanford University and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

version: '3.9'

services:
  # ENGAGE-HF Web Frontend
  stanford-spezi-web-template-application:
    container_name: 'stanford-spezi-web-template-application'
    image: 'stanfordspezi/spezi-web-template-application:dev'
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        - VITE_PUBLIC_FIREBASE_API_KEY=${VITE_PUBLIC_FIREBASE_API_KEY}
        - VITE_PUBLIC_FIREBASE_AUTH_DOMAIN=${VITE_PUBLIC_FIREBASE_AUTH_DOMAIN}
        - VITE_PUBLIC_FIREBASE_PROJECT_ID=${VITE_PUBLIC_FIREBASE_PROJECT_ID}
        - VITE_PUBLIC_FIREBASE_STORAGE_BUCKET=${VITE_PUBLIC_FIREBASE_STORAGE_BUCKET}
        - VITE_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${VITE_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
        - VITE_PUBLIC_FIREBASE_APP_ID=${VITE_PUBLIC_FIREBASE_APP_ID}
    expose:
      - '80'
    labels:
      # The domain the service will respond to
      - 'traefik.http.routers.backend.rule=Host(`localhost`)'
      # Allow request only from the predefined entry point named "web"
      - 'traefik.http.routers.backend.entrypoints=web'
      # We need to define the a service and specify, on which port our server is reachable
      - 'traefik.http.services.backend-service.loadbalancer.server.port=80'
      # We have to add this service to our router "backend". That's how the router knows where to forward the  requests
      - 'traefik.http.routers.backend.service=backend-service'
  # Reverse Proxy to protect our service from direct access
  traefik:
    container_name: 'traefik'
    image: 'traefik:v2.4'
    command:
      # Enable Debug output
      - '--log.level=DEBUG'
      # Enable the api and the traefik dashboard for debugging purposes, which can be reached under 127.0.0.1:8080
      - '--api.insecure=true'
      - '--api.dashboard=true'
      # Enabling docker provider
      - '--providers.docker=true'
      # Traefik will listen to incoming request on the port 80
      - '--entrypoints.web.address=:80'
    ports:
      # 8080 on the container is mapped to 8080 on the server/VM/your Machine.
      # Port 8080 is where the api traefik dashboard is located
      - '8080:8080'
      # Port 80 is where our stanford-spezi-web-template-application is running
      - '80:80'
    # Traefik needs the docker.sock to detect new docker container
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
