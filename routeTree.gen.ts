//
// This source file is part of the Stanford Biodesign Digital Health Spezi Web Template Application open-source project
//
// SPDX-FileCopyrightText: 2023 Stanford University and the project authors (see CONTRIBUTORS.md)
//
// SPDX-License-Identifier: MIT
//

/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as DashboardImport } from './routes/~_dashboard'
import { Route as SignInIndexImport } from './routes/~sign-in/~index'
import { Route as DashboardIndexImport } from './routes/~_dashboard/~index'
import { Route as DashboardPatientsIndexImport } from './routes/~_dashboard/~patients/~index'
import { Route as DashboardPatientsIdIndexImport } from './routes/~_dashboard/~patients/~$id/~index'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const SignInIndexRoute = SignInIndexImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPatientsIndexRoute = DashboardPatientsIndexImport.update({
  id: '/patients/',
  path: '/patients/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPatientsIdIndexRoute = DashboardPatientsIdIndexImport.update({
  id: '/patients/$id/',
  path: '/patients/$id/',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/patients/': {
      id: '/_dashboard/patients/'
      path: '/patients'
      fullPath: '/patients'
      preLoaderRoute: typeof DashboardPatientsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/patients/$id/': {
      id: '/_dashboard/patients/$id/'
      path: '/patients/$id'
      fullPath: '/patients/$id'
      preLoaderRoute: typeof DashboardPatientsIdIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardPatientsIndexRoute: typeof DashboardPatientsIndexRoute
  DashboardPatientsIdIndexRoute: typeof DashboardPatientsIdIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardPatientsIndexRoute: DashboardPatientsIndexRoute,
  DashboardPatientsIdIndexRoute: DashboardPatientsIdIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardRouteWithChildren
  '/': typeof DashboardIndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/patients': typeof DashboardPatientsIndexRoute
  '/patients/$id': typeof DashboardPatientsIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof DashboardIndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/patients': typeof DashboardPatientsIndexRoute
  '/patients/$id': typeof DashboardPatientsIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_dashboard/': typeof DashboardIndexRoute
  '/sign-in/': typeof SignInIndexRoute
  '/_dashboard/patients/': typeof DashboardPatientsIndexRoute
  '/_dashboard/patients/$id/': typeof DashboardPatientsIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/sign-in' | '/patients' | '/patients/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/patients' | '/patients/$id'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_dashboard/'
    | '/sign-in/'
    | '/_dashboard/patients/'
    | '/_dashboard/patients/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  SignInIndexRoute: typeof SignInIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  SignInIndexRoute: SignInIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/_dashboard",
        "/sign-in/"
      ]
    },
    "/_dashboard": {
      "filePath": "~_dashboard.tsx",
      "children": [
        "/_dashboard/",
        "/_dashboard/patients/",
        "/_dashboard/patients/$id/"
      ]
    },
    "/_dashboard/": {
      "filePath": "~_dashboard/~index.tsx",
      "parent": "/_dashboard"
    },
    "/sign-in/": {
      "filePath": "~sign-in/~index.tsx"
    },
    "/_dashboard/patients/": {
      "filePath": "~_dashboard/~patients/~index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/patients/$id/": {
      "filePath": "~_dashboard/~patients/~$id/~index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
